var Serf, Serf2, Serf3, Guard, Rogue, Rogue2, Rogue3, Militia, Militia2, Stronghold, Townhall, Majesty, BanditsStorage, Market, Market2, Enemy, Friend, Storage, Enemy1, Scout, School, Stronghold2, Storage2: Integer;

Var Stronghold2Destroyed, MajestyKilled, BanditsStorageDestroyed: Boolean;

const TIME_TO_ATTACK = 60000;

Procedure OnMissionStart;
begin
	Majesty:= S.GroupAt(128, 30);
	BanditsStorage:= S.HouseAt(134, 55);
	Market:= S.HouseAt(16, 32);
	Market2:= S.HouseAt(19, 40);
	Townhall:= S.HouseAt(32,37);
	Stronghold2:= S.HouseAt(122, 124);
	School:= S.HouseAt(115, 111);
	Storage2:= S.HouseAt(104, 116);
	A.PlayWavFadeMusic(0, 'Horn', 1);
	Storage:= S.HouseAt(80, 69);
	Enemy1:= S.GroupAt(115, 28);
	Enemy:= S.GroupAt(103, 36);
	Friend:= S.GroupAt(96, 30);
	Stronghold:= S.HouseAt(56, 32);
	A.CinematicStart(0);
	A.CinematicPanTo(0, 127, 30, 0);
	A.HouseTownHallMaxGold(Townhall, 999);
	Rogue:= S.GroupAt(124, 61);
	Rogue2:= S.GroupAt(125, 65);
	Rogue3:= S.GroupAt(131, 71);
	Militia:= S.GroupAt(130, 55);
	Militia2:= S.GroupAt(130, 62);
	Serf:= S.UnitAt(132, 56);
	Serf2:= S.UnitAt(135, 56);
	Serf3:= S.UnitAt(134, 57);
	Guard:= S.UnitAt(128, 64);
	end;


Procedure OnTick;
begin
		If BanditsStorageDestroyed = false then
		If (States.HouseDestroyed(BanditsStorage)) then
		begin
		BanditsStorageDestroyed:= true;
			A.GiveWares(0, 7, 50);
			A.ShowMsg(0, '<$9>');
			end;

		If Stronghold2Destroyed = false then
		If (States.HouseDestroyed(Stronghold2)) then
		begin
		Stronghold2Destroyed:= true;
			A.GiveGroup(0, 23, 132, 100, 7, 15, 5);
			A.GiveGroup(0, 23, 126, 105, 7, 15, 5);
			A.GiveGroup(0, 18, 133, 104, 7, 12, 4);
			A.GiveGroup(0, 26, 134, 95, 7, 12, 4);
			A.ShowMsg(0, '<$8>');
			end;
			
		//If MajestyKilled = false then
		//If ((Majesty:= (States.GroupAt(115, 70))) then
		//begin
		//Majesty:= true;
		//	A.GiveWares(0, 0, 50);
			//end;

		If S.GameTime = 600 then
		begin
			A.ShowMsg(0, '<$2>');
			end;
			
		If S.GameTime = 3000 then
		begin
			A.ShowMsgGoto(0, 80, 5, '<$3>');
			A.GiveGroup(0, 22, 79, 6, 5, 9, 3);
			end;
			
		If States.GameTime = 6000 then
		begin
			A.ShowMsg(0, '<$6>');
			Scout:= A.GiveGroup(0, 21, 69, 88, 7, 4, 2);
			A.GroupOrderWalk(Scout, 73, 40, 5);
			A.FogRevealCircle(0, 84, 110, 6);
			A.FogRevealCircle(0, 83, 114, 6);
			A.FogRevealCircle(0, 82, 118, 6);
			A.FogRevealCircle(0, 82, 121, 6);
			A.FogRevealCircle(0, 112, 96, 6);
			A.FogRevealCircle(0, 116, 97, 6);
			end;
			
If States.GameTime = 1 then
	A.GroupOrderStorm(Enemy);
	A.GroupOrderStorm(Friend);
If States.GameTime = 10 then
	A.CinematicPanTo(0, 56, 32, 100);
If States.GameTime = 100 then
	A.CinematicEnd(0);
If States.GameTime = 200 then
	A.GroupKillAll(Friend, false);
If States.GameTime = 110 then
	A.GroupOrderStorm(Enemy1);
If (S.HouseDestroyed(Stronghold)) then
	A.PlayerDefeat(0);
If States.GameTime = 4200 then
	A.GiveGroup(4, 16, 64, 127, 0, 15, 5); 
If States.GameTime = 4200 then
	A.GiveGroup(4, 16, 72, 127, 0, 15, 5); 
If States.GameTime = 4200 then
	A.GiveGroup(4, 18, 80, 127, 0, 12, 4); 
If States.GameTime = 4200 then
	A.GiveGroup(4, 20, 72, 134, 0, 15, 5); 
If States.GameTime = 4200 then
	A.GiveGroup(4, 20, 80, 134, 0, 18, 6); 
If States.GameTime = 105 then 
	A.OverlayTextSet(0, '<$4>');
If States.GameTime = 6000 then 
	A.OverlayTextSet(0, '<$5>');
If States.GameTime = 1200 then
	A.GiveGroup(2, 19, 64, 128, 0, 18, 6); 
If States.GameTime = 1200 then
	A.GiveGroup(2, 15, 72, 128, 0, 18, 6); 
If States.GameTime = 1200 then
	A.GiveGroup(2, 15, 80, 128, 0, 18, 6); 
If States.GameTime = 1200 then
	A.GiveGroup(2, 19, 72, 135, 0, 18, 6); 
If States.GameTime = 1200 then
	A.GiveGroup(2, 17, 80, 135, 0, 15, 6); 
If States.GameTime = 600 then
	A.GiveUnit(0, 6, 51, 22, 4);
If States.GameTime = 600 then
	A.GiveUnit(0, 4, 56, 10, 4);
If States.GameTime = 600 then
	A.GiveUnit(0, 6, 59, 13, 4);
If States.GameTime = 600 then
	A.GiveUnit(0, 4, 70, 21, 4);
If States.GameTime = 600 then
	A.GiveUnit(0, 5, 73, 27, 4);
If States.GameTime = 600 then
	A.GiveUnit(0, 13, 83, 21, 4);
If States.GameTime = 600 then
	A.GiveUnit(0, 0, 60, 17, 4);
If States.GameTime = 600 then
	A.GiveUnit(0, 0, 61, 17, 4);
If States.GameTime = 600 then
	A.GiveUnit(0, 0, 62, 17, 4);
If States.GameTime = 600 then
	A.GiveUnit(0, 0, 51, 15, 4);
If States.GameTime = 600 then
	A.GiveUnit(0, 0, 69, 21, 4);
If States.GameTime = 600 then
	A.GiveUnit(0, 9, 55, 10, 4);
If States.GameTime = 600 then
	A.GiveUnit(0, 9, 56, 33, 4);
If States.GameTime = 600 then
	A.GiveUnit(0, 9, 39, 32, 4);
If States.GameTime = 600 then
	A.GiveUnit(1, 0, 39, 33, 4);
If States.GameTime = 600 then
	A.GiveUnit(1, 0, 40, 33, 4);
If States.GameTime = 600 then
	A.GiveUnit(1, 0, 41, 33, 4);
If States.GameTime = 600 then
	A.GiveUnit(1, 9, 42, 33, 4);
If States.GameTime = 600 then
	A.GiveUnit(1, 9, 32, 38, 4);
If States.GameTime = 600 then
	A.GiveUnit(1, 9, 31, 38, 4);
If States.GameTime = 600 then
	A.GiveUnit(1, 0, 19, 41, 4);
If States.GameTime = 600 then
	A.GiveUnit(1, 0, 20, 41, 4);
If States.GameTime = 600 then
	A.GiveUnit(1, 9, 21, 41, 4);
If States.GameTime = 600 then
	A.GiveUnit(1, 9, 22, 41, 4);
If States.GameTime = 600 then
	A.GiveUnit(1, 0, 10, 32, 4);
If States.GameTime = 600 then
	A.GiveUnit(1, 0, 11, 32, 4);
If States.GameTime = 600 then
	A.GiveUnit(1, 0, 27, 27, 4);
If States.GameTime = 600 then
	A.GiveUnit(1, 0, 28, 27, 4);
If States.GameTime = 600 then
	A.GiveUnit(1, 0, 27, 28, 4);
If States.GameTime = 600 then
	A.GiveUnit(1, 0, 28, 28, 4);
If States.GameTime = 600 then
	A.GiveUnit(1, 0, 26, 33, 4);
If States.GameTime = 600 then
	A.GiveUnit(1, 0, 26, 33, 4);
If States.GameTime = 600 then
	A.GiveUnit(1, 0, 27, 33, 4);
If States.GameTime = 600 then
	A.GiveUnit(1, 0, 23, 27, 4);
If States.GameTime = 600 then
	A.GiveUnit(1, 0, 24, 27, 4);
If States.GameTime = 600 then
	A.GiveUnit(1, 0, 25, 27, 4);
If States.GameTime = 600 then
	A.GiveUnit(1, 0, 26, 27, 4);
If States.GameTime = 600 then
	A.GiveHouseSite(1, 8, 33, 27, false);
If States.GameTime = 600 then
	A.GiveHouseSite(1, 8, 26, 35, false);
If States.GameTime = 600 then
	A.GiveHouseSite(1, 8, 20, 36, false);
If States.GameTime = 600 then
	A.GiveHouseSite(1, 28, 28, 38, false);
If States.GameTime = 600 then
	A.GiveHouseSite(1, 0, 13, 36, false);
If States.GameTime = 600 then
	A.GiveHouseSite(1, 0, 9, 30, false);
If States.GameTime = 600 then
	A.GiveHouseSite(1, 0, 39, 27, false);
If States.GameTime = 1200 then
	A.PlanAddWinefield(1, 30, 33);
If States.GameTime = 1200 then
	A.PlanAddWinefield(1, 29, 33);
If States.GameTime = 1200 then
	A.PlanAddWinefield(1, 29, 32);
If States.GameTime mod 100 = 0 then
	A.HouseTownHallEquip(Townhall, 23, 1);
If States.GameTime mod 600 = 0 then
	A.MarketSetTrade(Market, 9, 7, 999);
If States.GameTime mod 9000 = 0 then
	A.MarketSetTrade(Market2, 2, 7, 999);
	
//	If (States.GameTime mod 18000 = 0) and (S.HouseAt(134, 55, BanditsStorage)) then
//	begin
//		A.GiveGroup(11, 27, 120, 58, 7, 4, 2); 
//		A.GiveGroup(11, 27, 120, 61, 6, 4, 2); 
//		A.GiveGroup(11, 27, 136, 56, 6, 4, 2); 
//		A.GiveGroup(11, 27, 136, 60, 6, 4, 2); 
//		A.GiveGroup(11, 27, 136, 62, 6, 4, 2); 
//		end;
	If S.GameTime mod 600 = 0 then
	begin
		A.GroupHungerSet(Rogue, 27000);
		A.GroupHungerSet(Rogue2, 27000);	
		A.GroupHungerSet(Rogue3, 27000);
		A.GroupHungerSet(Militia, 27000);
		A.GroupHungerSet(Militia2, 27000);
		A.UnitHungerSet(Serf, 27000);
		A.UnitHungerSet(Serf2, 27000);
		A.UnitHungerSet(Serf3, 27000);
		A.UnitHungerSet(Guard, 27000);
		end;
end;

